Index: src/controller/Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller;\r\n\r\nimport model.Step;\r\nimport listener.GameListener;\r\nimport model.Board;\r\nimport model.BoardPoint;\r\nimport model.Player;\r\nimport view.BoardView;\r\nimport view.CellView;\r\nimport view.chessView.AnimalView;\r\n\r\nimport javax.swing.*;\r\nimport java.util.ArrayList;\r\n\r\npublic class Controller implements GameListener {\r\n\r\n    public Board board;\r\n    public BoardView boardView;\r\n    public ArrayList<BoardPoint> canStepPoints;//把可以走的点返回来给我高亮\r\n    public Player currentPlayer;\r\n    public Player winner;\r\n    public BoardPoint selectedPoint;//选中的点高亮\r\n    public boolean isPlayback;\r\n    public boolean skip;\r\n\r\n //   public JLabel timeLabel;\r\n    public static Timer timer;\r\n\r\n    public Controller(BoardView boardView, Board board) {\r\n        this.boardView = boardView;\r\n        this.board = board;\r\n        this.currentPlayer = Player.BLUE;\r\n        this.winner = null;\r\n     //   timeLabel = boardView.timeLabel;\r\n        isPlayback = false;\r\n        skip = false;\r\n\r\n        boardView.setController(this);\r\n        boardView.initiateChessComponent(board);\r\n        boardView.repaint();\r\n    }\r\n\r\n    public void changePlayer() {\r\n        currentPlayer = currentPlayer == Player.BLUE ? Player.RED : Player.BLUE;\r\n        if (currentPlayer == Player.BLUE)\r\n            boardView.statusLabel.setText(\"Turn \" + (board.steps.size() / 2 + 1) + \": BLUE\");\r\n        else\r\n            boardView.statusLabel.setText(\"Turn \" + (board.steps.size() / 2 + 1) + \": RED\");\r\n    }\r\n\r\n    public void checkWin() {\r\n        if(board.blueDead.size()==8){\r\n            winner=Player.RED;\r\n        }\r\n        else if(board.redDead.size()==8){\r\n            winner=Player.BLUE;\r\n        }\r\n        //走到老巢的我还没写//\r\n        //判断棋子全吃完了，或者到老巢了//\r\n    }\r\n\r\n    public void winView() {\r\n        JOptionPane.showMessageDialog(boardView, (winner == Player.BLUE ? \"BLUE\" : \"RED\") + \" Win !\");\r\n    }\r\n\r\n    @Override\r\n    public void clickCell(BoardPoint point, CellView component) {\r\n        if (selectedPoint != null && board.canMove(selectedPoint, point)) {\r\n            board.move(selectedPoint, point);\r\n            setCanStepFalse();\r\n            canStepPoints = null;\r\n            selectedPoint = null;\r\n            boardView.setChessViewAtGrid(point, boardView.removeChessViewAtGrid(selectedPoint));\r\n            changePlayer();\r\n            boardView.repaint();\r\n            component.revalidate();\r\n            checkWin();\r\n            if (winner != null) {\r\n                winView();\r\n                reset();\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void clickChess(BoardPoint point, AnimalView component) {\r\n        if (selectedPoint == null) {\r\n            if (board.getChessPlayer(point).equals(currentPlayer)) {\r\n                canStepPoints = getCanStepPoints(point);\r\n                selectedPoint = point;\r\n                component.setSelected(true);\r\n                component.revalidate();\r\n                component.repaint();\r\n                boardView.repaint();\r\n                boardView.revalidate();\r\n            }\r\n        } else if (selectedPoint.equals(point)) {\r\n            selectedPoint = null;\r\n            canStepPoints = null;\r\n            setCanStepFalse();\r\n            component.setSelected(false);\r\n            component.repaint();\r\n            component.revalidate();\r\n            boardView.repaint();\r\n            boardView.revalidate();\r\n        } else if (board.canEat(selectedPoint, point)) {\r\n            board.eat(selectedPoint, point);\r\n            boardView.removeChessViewAtGrid(point);\r\n            boardView.setChessViewAtGrid(point, boardView.removeChessViewAtGrid(selectedPoint));\r\n            selectedPoint = null;\r\n            setCanStepFalse();\r\n            changePlayer();\r\n            boardView.repaint();\r\n            boardView.revalidate();\r\n            component.revalidate();\r\n\r\n            checkWin();\r\n            if (winner != null) {\r\n                winView();\r\n                reset();\r\n            }\r\n        }\r\n    }\r\n\r\n    public void setCanStepFalse() {\r\n        for (int i = 0; i < 7; i++) {\r\n            for (int j = 0; j < 9; j++) {\r\n                boardView.gridViews[i][j].canStep = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    public ArrayList<BoardPoint> getCanStepPoints(BoardPoint src) {\r\n        ArrayList<BoardPoint> list = new ArrayList<>();\r\n        for (int i = 0; i < 9; i++) {\r\n            for (int j = 0; j < 7; j++) {\r\n                BoardPoint dest = new BoardPoint(i, j);\r\n                if (board.canMove(src, dest)) {\r\n                    boardView.gridViews[i][j].canStep = true;\r\n                    list.add(dest);\r\n                }\r\n                if (board.canEat(src, dest)) {\r\n                    boardView.gridViews[i][j].canStep = true;\r\n                    list.add(dest);\r\n                }\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n\r\n    public void reset() {\r\n        canStepPoints = null;\r\n        board.initGrid();\r\n        board.initPieces();\r\n        boardView.removeChessComponent();\r\n        boardView.initiateChessComponent(board);\r\n        currentPlayer = Player.BLUE;\r\n        selectedPoint = null;\r\n        setCanStepFalse();\r\n      //  boardView.statusLabel.setText(\"Turn 1: BLUE\");\r\n        board.steps = new ArrayList<>();\r\n        boardView.repaint();\r\n        boardView.revalidate();\r\n        winner = null;\r\n\r\n        board.redDead = new ArrayList<>();\r\n        board.blueDead = new ArrayList<>();\r\n        //timer.time = 45;\r\n    }\r\n\r\n    public void regretOneStep() {\r\n        board.steps.remove(board.steps.size() - 1);\r\n        ArrayList<Step> list = board.steps;\r\n        reset();\r\n        for (int i = 0; i < list.size(); i++) {\r\n            Step step = list.get(i);\r\n            BoardPoint src = step.src;\r\n            BoardPoint dest = step.dest;\r\n            boolean isCapture = step.captured != null;\r\n            if (!isCapture) {\r\n                board.move(src, dest);\r\n                boardView.setChessViewAtGrid(dest, boardView.removeChessViewAtGrid(src));\r\n                selectedPoint = null;\r\n                changePlayer();\r\n                boardView.repaint();\r\n            } else {\r\n                board.eat(src, dest);\r\n                boardView.removeChessViewAtGrid(dest);\r\n                boardView.setChessViewAtGrid(dest, boardView.removeChessViewAtGrid(src));\r\n                changePlayer();\r\n                boardView.repaint();\r\n                boardView.revalidate();\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/controller/Controller.java b/src/controller/Controller.java
--- a/src/controller/Controller.java	(revision 8df31e9dec6ba4d91c99c726e18632dc23291778)
+++ b/src/controller/Controller.java	(date 1684153852062)
@@ -132,8 +132,8 @@
 
     public ArrayList<BoardPoint> getCanStepPoints(BoardPoint src) {
         ArrayList<BoardPoint> list = new ArrayList<>();
-        for (int i = 0; i < 9; i++) {
-            for (int j = 0; j < 7; j++) {
+        for (int i = 0; i < 7; i++) {
+            for (int j = 0; j < 9; j++) {
                 BoardPoint dest = new BoardPoint(i, j);
                 if (board.canMove(src, dest)) {
                     boardView.gridViews[i][j].canStep = true;
Index: src/model/Board.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class Board {\r\n    public Cell[][] grid;\r\n    public ArrayList<Step> steps;\r\n    public ArrayList<Chess> blueDead;\r\n    public ArrayList<Chess> redDead;\r\n    Chess  BlueRat=new Chess(Player.BLUE,1);\r\n    Chess  BlueCat=new Chess(Player.BLUE,2);\r\n    Chess  BlueDog=new Chess(Player.BLUE,3);\r\n    Chess  BlueWolf=new Chess(Player.BLUE,4);\r\n    Chess  BlueLeopard=new Chess(Player.BLUE,5);\r\n    Chess  BlueTiger=new Chess(Player.BLUE,6);\r\n    Chess  BlueLion=new Chess(Player.BLUE,7);\r\n    Chess  BlueElephant=new Chess(Player.BLUE,8);\r\n\r\n    Chess  RedRat=new Chess(Player.RED,1);\r\n    Chess  RedCat=new Chess(Player.RED,2);\r\n    Chess  RedDog=new Chess(Player.RED,3);\r\n    Chess  RedWolf=new Chess(Player.RED,4);\r\n    Chess  RedLeopard=new Chess(Player.RED,5);\r\n    Chess  RedTiger=new Chess(Player.RED,6);\r\n    Chess  RedLion=new Chess(Player.RED,7);\r\n    Chess  RedElephant=new Chess(Player.RED,8);\r\n\r\n    public Board() {\r\n        this.grid = new Cell[7][9];\r\n        steps = new ArrayList<>();\r\n        blueDead = new ArrayList<>();\r\n        redDead = new ArrayList<>();\r\n\r\n        initGrid();\r\n        initPieces();\r\n    }\r\n\r\n    public void initGrid() {\r\n        for (int i = 0; i < Constant.CHESSBOARD_ROW_SIZE.getNum(); i++) {\r\n            for (int j = 0; j < Constant.CHESSBOARD_COL_SIZE.getNum(); j++) {\r\n                grid[i][j] = new Cell();\r\n            }\r\n        }\r\n    }\r\n\r\n    public void initPieces() {\r\n        for (int i = 0; i < Constant.CHESSBOARD_ROW_SIZE.getNum(); i++) {\r\n            for (int j = 0; j < Constant.CHESSBOARD_COL_SIZE.getNum(); j++) {\r\n                grid[i][j].removeChess();\r\n            }\r\n            grid[0][0].setChess(RedLion);\r\n            grid[1][1].setChess(RedDog);\r\n            grid[2][2].setChess(RedLeopard);\r\n            grid[0][2].setChess(RedRat);\r\n            grid[4][2].setChess(RedWolf);\r\n            grid[5][1].setChess(RedCat);\r\n            grid[6][0].setChess(RedTiger);\r\n            grid[6][2].setChess(RedElephant);\r\n\r\n            grid[0][6].setChess(BlueElephant);\r\n            grid[0][8].setChess(BlueTiger);\r\n            grid[1][7].setChess(BlueCat);\r\n            grid[2][6].setChess(BlueWolf);\r\n            grid[4][6].setChess(BlueLeopard);\r\n            grid[5][7].setChess(BlueDog);\r\n            grid[6][6].setChess(BlueRat);\r\n            grid[6][8].setChess(BlueLion);\r\n        }\r\n    }\r\n\r\n    public Cell[][] getGrid() {\r\n        return grid;\r\n    }\r\n\r\n    public Player getChessPlayer(BoardPoint point) {\r\n        return getCellAt(point).getChess().getPlayer();\r\n    }\r\n\r\n    public Cell getCellAt(BoardPoint point) {\r\n        return grid[point.getRow()][point.getCol()];\r\n    }\r\n\r\n    public Chess getChessAt(BoardPoint point) {\r\n        return getCellAt(point).getChess();\r\n    }\r\n\r\n    private void setChess(BoardPoint point, Chess chess) {\r\n        getCellAt(point).setChess(chess);\r\n        if (isOpponentTrap(point, chess.getPlayer())) {\r\n            chess.rank = 0;\r\n        }\r\n    }\r\n\r\n    private Chess removeChess(BoardPoint point) {\r\n        Chess chess = getChessAt(point);\r\n        getCellAt(point).removeChess();\r\n        return chess;\r\n    }\r\n\r\n    public boolean canMove(BoardPoint src, BoardPoint dest) {\r\n        if(getChessAt(src)!=null)//我还在想怎么调用Controller里的被选中的棋子，这部分我之后再改改//\r\n        {\r\n            if(((dest.getRow()-src.getRow())^2+(dest.getCol()-src.getCol())^2)==1){\r\n                if(isRiver(dest)){\r\n                    if(grid[src.getRow()][src.getCol()].chess==RedRat||grid[src.getRow()][src.getCol()].chess==BlueRat){\r\n                        return true;\r\n                    }\r\n                    else{\r\n                        return false;\r\n                    }\r\n                }\r\n                else{\r\n                    return true;\r\n                }\r\n            }\r\n            else{\r\n                return false;\r\n            }\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private boolean canJumpRiver(BoardPoint src, BoardPoint dest) {\r\n        if(getChessAt(src)==RedLion||getChessAt(src)==RedTiger||getChessAt(src)==BlueLion||getChessAt(src)==BlueTiger){\r\n            BoardPoint boardPoint1=new BoardPoint(src.getRow(),src.getCol()+1);\r\n            BoardPoint boardPoint2=new BoardPoint(dest.getRow(),dest.getCol()+1);\r\n            BoardPoint boardPoint3=new BoardPoint(src.getRow()+1,dest.getCol());\r\n            BoardPoint boardPoint4=new BoardPoint(dest.getRow()+1,dest.getCol());\r\n            if(src.getRow()==dest.getRow()&&dest.getCol()-src.getCol()==2&&isRiver(boardPoint1)) {\r\n                return true;\r\n            }\r\n            else if(src.getRow()==dest.getRow()&&src.getCol()-dest.getCol()==2&&isRiver(boardPoint2)) {\r\n                return true;\r\n            }\r\n            else if(src.getCol()==dest.getCol()&&dest.getRow()-src.getRow()==3&&isRiver(boardPoint3)){\r\n                return true;\r\n            }\r\n            else if(src.getCol()==dest.getCol()&&src.getRow()-dest.getRow()==3&&isRiver(boardPoint4)){\r\n                return true;\r\n            }\r\n            else{\r\n                return false;\r\n            }\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public boolean canEat(BoardPoint src, BoardPoint dest) {\r\n        Chess attacker = getChessAt(src);\r\n        Chess defender = getChessAt(dest);\r\n        if(attacker.getPlayer().getColor()!=defender.getPlayer().getColor()){\r\n            if(canMove(src,dest)){\r\n                if(attacker.rank>=defender.rank){\r\n                    return true;\r\n                }\r\n                else{\r\n                    return false;\r\n                }\r\n            }\r\n            else{\r\n                return false;\r\n            }\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n        //空的判断，只能吃对方的，判断rank，判断可走性（比如河）//\r\n    }\r\n    private void jumpRiver(BoardPoint src,BoardPoint dest){\r\n        if(canJumpRiver(src,dest)){\r\n            setChess(dest,getChessAt(src));\r\n            removeChess(src);\r\n            Step step=new Step(src,dest,getChessPlayer(src));\r\n            steps.add(step);\r\n            //这边加进step的部分写的可能有点问题，之后再看看//\r\n        }\r\n    }\r\n\r\n\r\n    private boolean isRiver(BoardPoint point) {\r\n        if(((point.getRow()==3||point.getRow()==4||point.getRow()==5)&&(point.getCol()==1||point.getCol()==2||point.getCol()==4||point.getCol()==5))){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private boolean isOwnDens(BoardPoint point, Player color) {\r\n        if((color==Player.BLUE&&point.getRow()==8&&point.getCol()==3)||(color==Player.RED&&point.getRow()==0&&point.getCol()==3)){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public void move(BoardPoint src, BoardPoint dest) {\r\n        if(canMove(src,dest)){\r\n            setChess(dest,getChessAt(src));\r\n            removeChess(src);\r\n            Step step=new Step(src,dest,getChessPlayer(src));\r\n            steps.add(step);\r\n        }\r\n    }\r\n\r\n    public void eat(BoardPoint src, BoardPoint dest) {\r\n        Chess attacker = removeChess(src);\r\n        Chess defender = removeChess(dest);\r\n        if(canEat(src,dest)){\r\n            setChess(dest, attacker);\r\n            if(defender.getPlayer()==Player.BLUE) {\r\n                blueDead.add(defender);\r\n            }\r\n            else{\r\n                redDead.add(defender);\r\n            }\r\n            Step step=new Step(src,dest,getChessPlayer(src),defender);\r\n            steps.add(step);\r\n        }\r\n        //判断能不能吃，吃，记录死了的棋子放在list里面，记录step//\r\n    }\r\n\r\n    private boolean isOpponentDens(BoardPoint point, Player color) {\r\n        if((color==Player.RED&&point.getRow()==8&&point.getCol()==3)||(color==Player.BLUE&&point.getRow()==0&&point.getCol()==3)){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private boolean isOpponentTrap(BoardPoint point, Player color) {\r\n        if(color==Player.RED&&((point.getRow()==8&&(point.getCol()==2||point.getCol()==4))||(point.getRow()==7&&point.getCol()==3))){\r\n            return true;\r\n        }\r\n        else if(color==Player.BLUE&&((point.getRow()==0&&(point.getCol()==2||point.getCol()==4))||(point.getRow()==1&&point.getCol()==3))){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/model/Board.java b/src/model/Board.java
--- a/src/model/Board.java	(revision 8df31e9dec6ba4d91c99c726e18632dc23291778)
+++ b/src/model/Board.java	(date 1684155062856)
@@ -151,11 +151,16 @@
 
     public boolean canEat(BoardPoint src, BoardPoint dest) {
         Chess attacker = getChessAt(src);
-        Chess defender = getChessAt(dest);
-        if(attacker.getPlayer().getColor()!=defender.getPlayer().getColor()){
-            if(canMove(src,dest)){
-                if(attacker.rank>=defender.rank){
-                    return true;
+        if(getChessAt(dest)!=null){
+            Chess defender = getChessAt(dest);
+            if(attacker.getPlayer().getColor()!=defender.getPlayer().getColor()){
+                if(canMove(src,dest)){
+                    if(attacker.rank>=defender.rank){
+                        return true;
+                    }
+                    else{
+                        return false;
+                    }
                 }
                 else{
                     return false;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e93436ec-d404-4df7-bde5-cda3dcb5f90d\" name=\"Changes\" comment=\"Test0.1\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/controller/Controller.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/controller/Controller.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/model/Board.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/model/Board.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/view/BeginFrame.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/view/BeginFrame.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"HARD\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2PSQB1ZCcKNuSJPZJAp7o95qQHb\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"last_opened_file_path\": \"D:/0JAVACOMMUNITY/0Javawork/Project1\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\0JAVACOMMUNITY\\0Javawork\\Project1\\src\\view\" />\r\n      <recent name=\"D:\\0JAVACOMMUNITY\\0Javawork\\Project1\\src\" />\r\n      <recent name=\"D:\\0JAVACOMMUNITY\\0Javawork\\Project1\" />\r\n      <recent name=\"D:\\0JAVACOMMUNITY\\0Javawork\\Project1\\resource\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"model\" />\r\n      <recent name=\"view\" />\r\n      <recent name=\"\" />\r\n      <recent name=\"view.chessView\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"Project1\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e93436ec-d404-4df7-bde5-cda3dcb5f90d\" name=\"Changes\" comment=\"\" />\r\n      <created>1683447865168</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1683447865168</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Test1\">\r\n      <created>1683949135727</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683949135727</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"第一个没有放棋子的稳定版本\">\r\n      <created>1684031348336</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684031348336</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"稳定1.0\">\r\n      <created>1684031402888</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684031402888</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Test0.1\">\r\n      <created>1684040423405</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684040423405</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Test1\" />\r\n    <MESSAGE value=\"第一个没有放棋子的稳定版本\" />\r\n    <MESSAGE value=\"稳定1.0\" />\r\n    <MESSAGE value=\"Test0.1\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Test0.1\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 8df31e9dec6ba4d91c99c726e18632dc23291778)
+++ b/.idea/workspace.xml	(date 1684154990975)
@@ -4,11 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="e93436ec-d404-4df7-bde5-cda3dcb5f90d" name="Changes" comment="Test0.1">
+    <list default="true" id="e93436ec-d404-4df7-bde5-cda3dcb5f90d" name="Changes" comment="稳定1.0">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/controller/Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/controller/Controller.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/model/Board.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/model/Board.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/view/BeginFrame.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/view/BeginFrame.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -28,14 +27,14 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "last_opened_file_path": "D:/0JAVACOMMUNITY/0Javawork/Project1"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;D:/0JAVACOMMUNITY/0Javawork/Jungle&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="D:\0JAVACOMMUNITY\0Javawork\Project1\src\view" />
@@ -94,14 +93,7 @@
       <option name="project" value="LOCAL" />
       <updated>1684031402888</updated>
     </task>
-    <task id="LOCAL-00004" summary="Test0.1">
-      <created>1684040423405</created>
-      <option name="number" value="00004" />
-      <option name="presentableId" value="LOCAL-00004" />
-      <option name="project" value="LOCAL" />
-      <updated>1684040423405</updated>
-    </task>
-    <option name="localTasksCounter" value="5" />
+    <option name="localTasksCounter" value="4" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -119,7 +111,6 @@
     <MESSAGE value="Test1" />
     <MESSAGE value="第一个没有放棋子的稳定版本" />
     <MESSAGE value="稳定1.0" />
-    <MESSAGE value="Test0.1" />
-    <option name="LAST_COMMIT_MESSAGE" value="Test0.1" />
+    <option name="LAST_COMMIT_MESSAGE" value="稳定1.0" />
   </component>
 </project>
\ No newline at end of file
