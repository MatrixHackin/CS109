Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e93436ec-d404-4df7-bde5-cda3dcb5f90d\" name=\"Changes\" comment=\"添加了倒计时功能\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/controller/Controller.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/controller/Controller.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/view/BoardView.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/view/BoardView.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/view/GameFrame.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/view/GameFrame.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"HARD\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2PSQB1ZCcKNuSJPZJAp7o95qQHb\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <OptionsSetting value=\"false\" id=\"Update\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/0JAVACOMMUNITY/0Javawork/Jungle&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\0JAVACOMMUNITY\\0Javawork\\CS109\\resource\" />\r\n      <recent name=\"D:\\0JAVACOMMUNITY\\0Javawork\\CS109\\src\\view\" />\r\n      <recent name=\"D:\\0JAVACOMMUNITY\\0Javawork\\CS109\\src\\view\\chessView\" />\r\n      <recent name=\"D:\\0JAVACOMMUNITY\\0Javawork\\CS109\" />\r\n      <recent name=\"D:\\0JAVACOMMUNITY\\0Javawork\\Project1\\src\\view\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"model\" />\r\n      <recent name=\"view\" />\r\n      <recent name=\"\" />\r\n      <recent name=\"view.chessView\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"Project1\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e93436ec-d404-4df7-bde5-cda3dcb5f90d\" name=\"Changes\" comment=\"\" />\r\n      <created>1683447865168</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1683447865168</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Test1\">\r\n      <created>1683949135727</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683949135727</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"第一个没有放棋子的稳定版本\">\r\n      <created>1684031348336</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684031348336</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"稳定1.0\">\r\n      <created>1684031402888</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684031402888</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Test0.1\">\r\n      <created>1684040423405</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684040423405</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Test0.1\">\r\n      <created>1684152861499</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684152861499</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Test0.1\">\r\n      <created>1684152982621</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684152982621</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"2.0\">\r\n      <created>1684153759325</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684153759325</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"优化了frame和登录界面\">\r\n      <created>1684281396475</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684281396475</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"优化了游戏界面，新增了更换主题功能\">\r\n      <created>1684370714273</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684370714273</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Version8&#10;修改了新bug&#10;实现了悔棋功能\">\r\n      <created>1684566038589</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684566038589</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Version9&#10;修改了新bug&#10;实现了悔棋功能&#10;但是发现棋子如果在最下面一行的话悔棋过程的view就无法显示，其他地方的悔棋view都很正常，应该是前端的问题，你有时间看看吧\">\r\n      <created>1684569186438</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684569186438</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"增加了展示死亡棋子的功能\">\r\n      <created>1684636046302</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684636046302</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"尝试加多个存档但失败了，后续再看\">\r\n      <created>1684640851243</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684640851243</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"尝试加多个存档但失败了，后续再看\">\r\n      <created>1684640864562</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684640864562</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"添加了倒计时功能\">\r\n      <created>1684646658263</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684646658263</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"16\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Test1\" />\r\n    <MESSAGE value=\"第一个没有放棋子的稳定版本\" />\r\n    <MESSAGE value=\"稳定1.0\" />\r\n    <MESSAGE value=\"Test0.1\" />\r\n    <MESSAGE value=\"2.0\" />\r\n    <MESSAGE value=\"优化了frame和登录界面\" />\r\n    <MESSAGE value=\"优化了游戏界面，新增了更换主题功能\" />\r\n    <MESSAGE value=\"Version8&#10;修改了新bug&#10;实现了悔棋功能\" />\r\n    <MESSAGE value=\"Version9&#10;修改了新bug&#10;实现了悔棋功能&#10;但是发现棋子如果在最下面一行的话悔棋过程的view就无法显示，其他地方的悔棋view都很正常，应该是前端的问题，你有时间看看吧\" />\r\n    <MESSAGE value=\"增加了展示死亡棋子的功能\" />\r\n    <MESSAGE value=\"尝试加多个存档但失败了，后续再看\" />\r\n    <MESSAGE value=\"添加了倒计时功能\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"添加了倒计时功能\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision f4d5ba78dcd782e8fcf0ee9c89da87f7c7d9a550)
+++ b/.idea/workspace.xml	(date 1684661204847)
@@ -4,11 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="e93436ec-d404-4df7-bde5-cda3dcb5f90d" name="Changes" comment="添加了倒计时功能">
+    <list default="true" id="e93436ec-d404-4df7-bde5-cda3dcb5f90d" name="Changes" comment="增加了展示死亡棋子的功能">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023_5_21_8_59__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023_5_21_8_59__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/controller/Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/controller/Controller.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/view/BoardView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/view/BoardView.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/view/GameFrame.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/view/GameFrame.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -167,28 +166,7 @@
       <option name="project" value="LOCAL" />
       <updated>1684636046302</updated>
     </task>
-    <task id="LOCAL-00013" summary="尝试加多个存档但失败了，后续再看">
-      <created>1684640851243</created>
-      <option name="number" value="00013" />
-      <option name="presentableId" value="LOCAL-00013" />
-      <option name="project" value="LOCAL" />
-      <updated>1684640851243</updated>
-    </task>
-    <task id="LOCAL-00014" summary="尝试加多个存档但失败了，后续再看">
-      <created>1684640864562</created>
-      <option name="number" value="00014" />
-      <option name="presentableId" value="LOCAL-00014" />
-      <option name="project" value="LOCAL" />
-      <updated>1684640864562</updated>
-    </task>
-    <task id="LOCAL-00015" summary="添加了倒计时功能">
-      <created>1684646658263</created>
-      <option name="number" value="00015" />
-      <option name="presentableId" value="LOCAL-00015" />
-      <option name="project" value="LOCAL" />
-      <updated>1684646658263</updated>
-    </task>
-    <option name="localTasksCounter" value="16" />
+    <option name="localTasksCounter" value="13" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -213,8 +191,6 @@
     <MESSAGE value="Version8&#10;修改了新bug&#10;实现了悔棋功能" />
     <MESSAGE value="Version9&#10;修改了新bug&#10;实现了悔棋功能&#10;但是发现棋子如果在最下面一行的话悔棋过程的view就无法显示，其他地方的悔棋view都很正常，应该是前端的问题，你有时间看看吧" />
     <MESSAGE value="增加了展示死亡棋子的功能" />
-    <MESSAGE value="尝试加多个存档但失败了，后续再看" />
-    <MESSAGE value="添加了倒计时功能" />
-    <option name="LAST_COMMIT_MESSAGE" value="添加了倒计时功能" />
+    <option name="LAST_COMMIT_MESSAGE" value="增加了展示死亡棋子的功能" />
   </component>
 </project>
\ No newline at end of file
Index: src/controller/Controller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller;\r\n\r\nimport model.*;\r\nimport listener.GameListener;\r\nimport view.BoardView;\r\nimport view.CellView;\r\nimport view.GameFrame;\r\nimport view.chessView.AnimalView;\r\nimport view.chessView.DeadChessView;\r\n\r\nimport javax.swing.*;\r\nimport java.util.ArrayList;\r\n\r\npublic class Controller implements GameListener {\r\n\r\n    public Board board;\r\n    public BoardView boardView;\r\n    public ArrayList<BoardPoint> canStepPoints;//把可以走的点返回来给我高亮\r\n    public Player currentPlayer;\r\n    public Player winner;\r\n    public BoardPoint selectedPoint;//选中的点高亮\r\n    public boolean isPlayback;\r\n    public boolean skip;\r\n    public boolean AI = false;\r\n    public AI AIplayer = new AI();\r\n    public AnimalView eaten;\r\n    public ArrayList<Board> steps;\r\n    public GameFrame gameFrame;\r\n\r\n    public static Timer timer;\r\n\r\n    public Controller(BoardView boardView, Board board) {\r\n        this.boardView = boardView;\r\n        this.board = board;\r\n        this.currentPlayer = Player.BLUE;\r\n        this.winner = null;\r\n        isPlayback = false;\r\n        skip = false;\r\n        this.steps = new ArrayList<>();\r\n\r\n        boardView.setController(this);\r\n        boardView.initiateChessComponent(board);\r\n        boardView.repaint();\r\n    }\r\n\r\n    public void changePlayer() {\r\n        currentPlayer = currentPlayer == Player.BLUE ? Player.RED : Player.BLUE;\r\n        if (currentPlayer == Player.BLUE)\r\n            boardView.turnLabel.setBounds(930, 120, 100, 100);\r\n        else\r\n            boardView.turnLabel.setBounds(35, 120, 100, 100);\r\n    }\r\n\r\n    public void checkWin(BoardPoint point) {\r\n        if (board.blueDead.size() == 8) {\r\n            winner = Player.RED;\r\n        } else if (board.redDead.size() == 8) {\r\n            winner = Player.BLUE;\r\n        } else if (board.isOpponentDens(point, currentPlayer)) {\r\n            winner = currentPlayer;\r\n        }\r\n        //判断棋子全吃完了，或者到老巢了//\r\n    }\r\n\r\n    public void winView() {\r\n        JOptionPane.showMessageDialog(boardView, (winner == Player.BLUE ? \"BLUE\" : \"RED\") + \" Win !\");\r\n    }\r\n\r\n    @Override\r\n    public void clickCell(BoardPoint point, CellView component) {\r\n        if (selectedPoint != null) {\r\n            if (board.canMove(selectedPoint, point)) {\r\n                board.move(selectedPoint, point);\r\n                setAllCellsCanStepFalse();\r\n                canStepPoints = null;\r\n                boardView.setChessViewAtCell(point, boardView.removeChessViewAtGrid(selectedPoint));\r\n                selectedPoint = null;\r\n                steps.add(board);\r\n                checkWin(point);\r\n                if (winner != null) {\r\n                    winView();\r\n                    reset();\r\n                } else {\r\n                    boardView.timer.stop();\r\n                    boardView.count=20;\r\n                    boardView.timeLabel.setText(Integer.toString(boardView.count));\r\n                    boardView.timer.start();\r\n                    if(boardView.controller.currentPlayer==Player.BLUE){\r\n                        boardView.timeLabel.setLocation(30,25);\r\n                    }\r\n                    else {\r\n                        boardView.timeLabel.setLocation(920,25);\r\n                    }\r\n                    boardView.controller.changePlayer();\r\n                }\r\n                if (AI) {\r\n                    changePlayer();\r\n                    AIplayer.EasyAI(board);\r\n                    if (!AIplayer.LastAction) {\r\n                        boardView.setChessViewAtCell(AIplayer.dest, boardView.removeChessViewAtGrid(AIplayer.src));\r\n                        steps.add(board);\r\n                    } else {\r\n                        boardView.removeChessViewAtGrid(AIplayer.dest);\r\n                        boardView.setChessViewAtCell(AIplayer.dest, boardView.removeChessViewAtGrid(AIplayer.src));\r\n                        steps.add(board);\r\n                    }\r\n                }\r\n                boardView.repaint();\r\n                component.revalidate();\r\n            }\r\n            checkWin(point);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void clickChess(BoardPoint point, AnimalView component) {\r\n        if (selectedPoint == null) {\r\n            if (board.getChessPlayer(point).equals(currentPlayer)) {\r\n                canStepPoints = getCanStepPoints(point);\r\n                selectedPoint = point;\r\n                component.setSelected(true);\r\n                component.revalidate();\r\n                component.repaint();\r\n                boardView.repaint();\r\n                boardView.revalidate();\r\n            }\r\n        } else if (selectedPoint.getCol() == point.getCol() && selectedPoint.getRow() == point.getRow()) {\r\n            selectedPoint = null;\r\n            canStepPoints = null;\r\n            setAllCellsCanStepFalse();\r\n            component.setSelected(false);\r\n            boardView.repaint();\r\n            boardView.revalidate();\r\n            component.repaint();\r\n            component.revalidate();\r\n            //放下棋子\r\n        } else if (board.canEat(selectedPoint, point)) {\r\n            board.eat(selectedPoint, point);\r\n            eaten = boardView.removeChessViewAtGrid(point);\r\n            boardView.setChessViewAtCell(point, boardView.removeChessViewAtGrid(selectedPoint));\r\n            selectedPoint = null;\r\n            setAllCellsCanStepFalse();\r\n            steps.add(board);\r\n            checkWin(point);\r\n            if (winner != null) {\r\n            } else {\r\n                changePlayer();\r\n                boardView.timer.stop();\r\n                boardView.count=20;\r\n                changePlayer();\r\n                boardView.timeLabel.setText(Integer.toString(boardView.count));\r\n                boardView.timer.start();\r\n                if(boardView.controller.currentPlayer==Player.BLUE){\r\n                    boardView.timeLabel.setLocation(30,25);\r\n                }\r\n                else {\r\n                    boardView.timeLabel.setLocation(920,25);\r\n                }\r\n                boardView.controller.changePlayer();\r\n            }\r\n            if (AI) {\r\n                changePlayer();\r\n                AIplayer.EasyAI(board);\r\n                if (!AIplayer.LastAction) {\r\n                    boardView.setChessViewAtCell(AIplayer.dest, boardView.removeChessViewAtGrid(AIplayer.src));\r\n                    steps.add(board);\r\n                } else {\r\n                    boardView.removeChessViewAtGrid(AIplayer.dest);\r\n                    boardView.setChessViewAtCell(AIplayer.dest, boardView.removeChessViewAtGrid(AIplayer.src));\r\n                    steps.add(board);\r\n                }\r\n            }\r\n\r\n\r\n            if (currentPlayer == Player.RED) {\r\n                switch (board.redDead.get(board.redDead.size() - 1).getRank()) {\r\n                    case 1 -> {\r\n                        DeadChessView r1 = new DeadChessView(\"resource/animals/left/grey/1.png\");\r\n                        boardView.redDeadPanel.add(r1.getLabel());\r\n                    }\r\n                    case 2 -> {\r\n                        DeadChessView r2 = new DeadChessView(\"resource/animals/left/grey/2.png\");\r\n                        boardView.redDeadPanel.add(r2.getLabel());\r\n                    }\r\n                    case 3 -> {\r\n                        DeadChessView r3 = new DeadChessView(\"resource/animals/left/grey/3.png\");\r\n                        boardView.redDeadPanel.add(r3.getLabel());\r\n                    }\r\n                    case 4 -> {\r\n                        DeadChessView r4 = new DeadChessView(\"resource/animals/left/grey/4.png\");\r\n                        boardView.redDeadPanel.add(r4.getLabel());\r\n                    }\r\n                    case 5 -> {\r\n                        DeadChessView r5 = new DeadChessView(\"resource/animals/left/grey/5.png\");\r\n                        boardView.redDeadPanel.add(r5.getLabel());\r\n                    }\r\n                    case 6 -> {\r\n                        DeadChessView r6 = new DeadChessView(\"resource/animals/left/grey/6.png\");\r\n                        boardView.redDeadPanel.add(r6.getLabel());\r\n                    }\r\n                    case 7 -> {\r\n                        DeadChessView r7 = new DeadChessView(\"resource/animals/left/grey/7.png\");\r\n                        boardView.redDeadPanel.add(r7.getLabel());\r\n                    }\r\n                    case 8 -> {\r\n                        DeadChessView r8 = new DeadChessView(\"resource/animals/left/grey/8.png\");\r\n                        boardView.redDeadPanel.add(r8.getLabel());\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            if (currentPlayer == Player.BLUE) {\r\n                switch (board.blueDead.get(board.blueDead.size() - 1).getRank()) {\r\n                    case 1 -> {\r\n                        DeadChessView r1 = new DeadChessView(\"resource/animals/right/grey/1.png\");\r\n                        boardView.blueDeadPanel.add(r1.getLabel());\r\n                    }\r\n                    case 2 -> {\r\n                        DeadChessView r2 = new DeadChessView(\"resource/animals/right/grey/2.png\");\r\n                        boardView.blueDeadPanel.add(r2.getLabel());\r\n                    }\r\n                    case 3 -> {\r\n                        DeadChessView r3 = new DeadChessView(\"resource/animals/right/grey/3.png\");\r\n                        boardView.blueDeadPanel.add(r3.getLabel());\r\n                    }\r\n                    case 4 -> {\r\n                        DeadChessView r4 = new DeadChessView(\"resource/animals/right/grey/4.png\");\r\n                        boardView.blueDeadPanel.add(r4.getLabel());\r\n                    }\r\n                    case 5 -> {\r\n                        DeadChessView r5 = new DeadChessView(\"resource/animals/right/grey/5.png\");\r\n                        boardView.blueDeadPanel.add(r5.getLabel());\r\n                    }\r\n                    case 6 -> {\r\n                        DeadChessView r6 = new DeadChessView(\"resource/animals/right/grey/6.png\");\r\n                        boardView.blueDeadPanel.add(r6.getLabel());\r\n                    }\r\n                    case 7 -> {\r\n                        DeadChessView r7 = new DeadChessView(\"resource/animals/right/grey/7.png\");\r\n                        boardView.blueDeadPanel.add(r7.getLabel());\r\n                    }\r\n                    case 8 -> {\r\n                        DeadChessView r8 = new DeadChessView(\"resource/animals/right/grey/8.png\");\r\n                        boardView.blueDeadPanel.add(r8.getLabel());\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            boardView.repaint();\r\n            boardView.revalidate();\r\n            component.revalidate();\r\n            if (winner != null) {\r\n                winView();\r\n                reset();\r\n            }\r\n        }\r\n    }\r\n\r\n    public void setAllCellsCanStepFalse() {\r\n        for (int i = 0; i < 7; i++) {\r\n            for (int j = 0; j < 9; j++) {\r\n                boardView.gridViews[i][j].canStep = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    public ArrayList<BoardPoint> getCanStepPoints(BoardPoint src) {\r\n        ArrayList<BoardPoint> list = new ArrayList<>();\r\n        for (int i = 0; i < board.getCanmovepoints(src).size(); i++) {\r\n            boardView.gridViews[board.getCanmovepoints(src).get(i).getRow()][board.getCanmovepoints(src).get(i).getCol()].canStep = true;\r\n            list.add(board.getCanmovepoints(src).get(i));\r\n        }\r\n        return list;\r\n    }\r\n\r\n    public void reset() {\r\n        canStepPoints = null;\r\n        board.initGrid();\r\n        board.initPieces();\r\n        boardView.removeAllChess();\r\n        boardView.initiateChessComponent(board);\r\n        currentPlayer = Player.BLUE;\r\n        boardView.turnLabel.setBounds(930, 120, 100, 100);\r\n        selectedPoint = null;\r\n        setAllCellsCanStepFalse();\r\n        steps.clear();\r\n        boardView.repaint();\r\n        boardView.revalidate();\r\n        winner = null;\r\n        boardView.redDeadPanel.removeAll();\r\n        boardView.blueDeadPanel.removeAll();\r\n        board.redDead = new ArrayList<>();\r\n        board.blueDead = new ArrayList<>();\r\n        boardView.redDeadPanel.repaint();\r\n        boardView.blueDeadPanel.repaint();\r\n\r\n    }\r\n\r\n    public void regretOneStep() {\r\n        if (!AI) {\r\n            if (steps.size() == 1) {\r\n                reset();\r\n            } else {\r\n                board.regret();\r\n                changePlayer();\r\n                if (board.steps.get(steps.size() - 1).ismove) {\r\n                    boardView.setChessViewAtCell(board.steps.get(board.steps.size() - 1).src, boardView.removeChessViewAtGrid(board.steps.get(board.steps.size() - 1).dest));\r\n                } else {\r\n                    boardView.setChessViewAtCell(board.steps.get(board.steps.size() - 1).src, boardView.removeChessViewAtGrid(board.steps.get(board.steps.size() - 1).dest));\r\n                    boardView.setChessViewAtCell(board.steps.get(board.steps.size() - 1).dest, eaten);\r\n                }\r\n            }\r\n        } else {\r\n            board.regret();\r\n            changePlayer();\r\n            if (board.steps.get(steps.size() - 1).ismove) {\r\n                boardView.setChessViewAtCell(board.steps.get(board.steps.size() - 1).src, boardView.removeChessViewAtGrid(board.steps.get(board.steps.size() - 1).dest));\r\n            } else {\r\n                boardView.setChessViewAtCell(board.steps.get(board.steps.size() - 1).src, boardView.removeChessViewAtGrid(board.steps.get(board.steps.size() - 1).dest));\r\n                boardView.setChessViewAtCell(board.steps.get(board.steps.size() - 1).dest, eaten);\r\n            }\r\n            board.regret(AI);\r\n            changePlayer();\r\n            if (board.steps.get(steps.size() - 2).ismove) {\r\n                boardView.setChessViewAtCell(board.steps.get(board.steps.size() - 2).src, boardView.removeChessViewAtGrid(board.steps.get(board.steps.size() - 2).dest));\r\n            } else {\r\n                boardView.setChessViewAtCell(board.steps.get(board.steps.size() - 2).src, boardView.removeChessViewAtGrid(board.steps.get(board.steps.size() - 2).dest));\r\n                boardView.setChessViewAtCell(board.steps.get(board.steps.size() - 2).dest, eaten);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/controller/Controller.java b/src/controller/Controller.java
--- a/src/controller/Controller.java	(revision f4d5ba78dcd782e8fcf0ee9c89da87f7c7d9a550)
+++ b/src/controller/Controller.java	(date 1684661446441)
@@ -170,84 +170,7 @@
                     steps.add(board);
                 }
             }
-
-
-            if (currentPlayer == Player.RED) {
-                switch (board.redDead.get(board.redDead.size() - 1).getRank()) {
-                    case 1 -> {
-                        DeadChessView r1 = new DeadChessView("resource/animals/left/grey/1.png");
-                        boardView.redDeadPanel.add(r1.getLabel());
-                    }
-                    case 2 -> {
-                        DeadChessView r2 = new DeadChessView("resource/animals/left/grey/2.png");
-                        boardView.redDeadPanel.add(r2.getLabel());
-                    }
-                    case 3 -> {
-                        DeadChessView r3 = new DeadChessView("resource/animals/left/grey/3.png");
-                        boardView.redDeadPanel.add(r3.getLabel());
-                    }
-                    case 4 -> {
-                        DeadChessView r4 = new DeadChessView("resource/animals/left/grey/4.png");
-                        boardView.redDeadPanel.add(r4.getLabel());
-                    }
-                    case 5 -> {
-                        DeadChessView r5 = new DeadChessView("resource/animals/left/grey/5.png");
-                        boardView.redDeadPanel.add(r5.getLabel());
-                    }
-                    case 6 -> {
-                        DeadChessView r6 = new DeadChessView("resource/animals/left/grey/6.png");
-                        boardView.redDeadPanel.add(r6.getLabel());
-                    }
-                    case 7 -> {
-                        DeadChessView r7 = new DeadChessView("resource/animals/left/grey/7.png");
-                        boardView.redDeadPanel.add(r7.getLabel());
-                    }
-                    case 8 -> {
-                        DeadChessView r8 = new DeadChessView("resource/animals/left/grey/8.png");
-                        boardView.redDeadPanel.add(r8.getLabel());
-                    }
-                }
-            }
-
-
-            if (currentPlayer == Player.BLUE) {
-                switch (board.blueDead.get(board.blueDead.size() - 1).getRank()) {
-                    case 1 -> {
-                        DeadChessView r1 = new DeadChessView("resource/animals/right/grey/1.png");
-                        boardView.blueDeadPanel.add(r1.getLabel());
-                    }
-                    case 2 -> {
-                        DeadChessView r2 = new DeadChessView("resource/animals/right/grey/2.png");
-                        boardView.blueDeadPanel.add(r2.getLabel());
-                    }
-                    case 3 -> {
-                        DeadChessView r3 = new DeadChessView("resource/animals/right/grey/3.png");
-                        boardView.blueDeadPanel.add(r3.getLabel());
-                    }
-                    case 4 -> {
-                        DeadChessView r4 = new DeadChessView("resource/animals/right/grey/4.png");
-                        boardView.blueDeadPanel.add(r4.getLabel());
-                    }
-                    case 5 -> {
-                        DeadChessView r5 = new DeadChessView("resource/animals/right/grey/5.png");
-                        boardView.blueDeadPanel.add(r5.getLabel());
-                    }
-                    case 6 -> {
-                        DeadChessView r6 = new DeadChessView("resource/animals/right/grey/6.png");
-                        boardView.blueDeadPanel.add(r6.getLabel());
-                    }
-                    case 7 -> {
-                        DeadChessView r7 = new DeadChessView("resource/animals/right/grey/7.png");
-                        boardView.blueDeadPanel.add(r7.getLabel());
-                    }
-                    case 8 -> {
-                        DeadChessView r8 = new DeadChessView("resource/animals/right/grey/8.png");
-                        boardView.blueDeadPanel.add(r8.getLabel());
-                    }
-                }
-            }
-
-
+            addDeadView();
             boardView.repaint();
             boardView.revalidate();
             component.revalidate();
@@ -299,25 +222,37 @@
     }
 
     public void regretOneStep() {
+        //AI模式关闭
         if (!AI) {
             if (steps.size() == 1) {
                 reset();
             } else {
                 board.regret();
-                changePlayer();
                 if (board.steps.get(steps.size() - 1).ismove) {
                     boardView.setChessViewAtCell(board.steps.get(board.steps.size() - 1).src, boardView.removeChessViewAtGrid(board.steps.get(board.steps.size() - 1).dest));
-                } else {
+                }
+                else {
                     boardView.setChessViewAtCell(board.steps.get(board.steps.size() - 1).src, boardView.removeChessViewAtGrid(board.steps.get(board.steps.size() - 1).dest));
                     boardView.setChessViewAtCell(board.steps.get(board.steps.size() - 1).dest, eaten);
+                    //删掉展示出来的被吃棋子（不能及时消失）
+                    if(currentPlayer==Player.BLUE){
+                        boardView.redDeadPanel.remove(board.blueDead.size());
+                    }
+                    else{
+                        boardView.blueDeadPanel.remove(board.redDead.size());
+                    }
                 }
+                changePlayer();
             }
-        } else {
+        }
+        //AI模式开启
+        else {
             board.regret();
             changePlayer();
             if (board.steps.get(steps.size() - 1).ismove) {
                 boardView.setChessViewAtCell(board.steps.get(board.steps.size() - 1).src, boardView.removeChessViewAtGrid(board.steps.get(board.steps.size() - 1).dest));
-            } else {
+            }
+            else {
                 boardView.setChessViewAtCell(board.steps.get(board.steps.size() - 1).src, boardView.removeChessViewAtGrid(board.steps.get(board.steps.size() - 1).dest));
                 boardView.setChessViewAtCell(board.steps.get(board.steps.size() - 1).dest, eaten);
             }
@@ -331,6 +266,81 @@
             }
         }
     }
+
+    public void addDeadView(){
+        if (currentPlayer == Player.RED) {
+            switch (board.redDead.get(board.redDead.size() - 1).getRank()) {
+                case 1 -> {
+                    DeadChessView r1 = new DeadChessView("resource/animals/right/grey/1.png");
+                    boardView.blueDeadPanel.add(r1.getLabel());
+                }
+                case 2 -> {
+                    DeadChessView r2 = new DeadChessView("resource/animals/right/grey/2.png");
+                    boardView.blueDeadPanel.add(r2.getLabel());
+                }
+                case 3 -> {
+                    DeadChessView r3 = new DeadChessView("resource/animals/right/grey/3.png");
+                    boardView.blueDeadPanel.add(r3.getLabel());
+                }
+                case 4 -> {
+                    DeadChessView r4 = new DeadChessView("resource/animals/right/grey/4.png");
+                    boardView.blueDeadPanel.add(r4.getLabel());
+                }
+                case 5 -> {
+                    DeadChessView r5 = new DeadChessView("resource/animals/right/grey/5.png");
+                    boardView.blueDeadPanel.add(r5.getLabel());
+                }
+                case 6 -> {
+                    DeadChessView r6 = new DeadChessView("resource/animals/right/grey/6.png");
+                    boardView.blueDeadPanel.add(r6.getLabel());
+                }
+                case 7 -> {
+                    DeadChessView r7 = new DeadChessView("resource/animals/right/grey/7.png");
+                    boardView.blueDeadPanel.add(r7.getLabel());
+                }
+                case 8 -> {
+                    DeadChessView r8 = new DeadChessView("resource/animals/right/grey/8.png");
+                    boardView.blueDeadPanel.add(r8.getLabel());
+                }
+            }
+        }
+        if (currentPlayer == Player.BLUE) {
+            switch (board.blueDead.get(board.blueDead.size() - 1).getRank()) {
+                case 1 -> {
+                    DeadChessView r1 = new DeadChessView("resource/animals/left/grey/1.png");
+                    boardView.redDeadPanel.add(r1.getLabel());
+                }
+                case 2 -> {
+                    DeadChessView r2 = new DeadChessView("resource/animals/left/grey/2.png");
+                    boardView.redDeadPanel.add(r2.getLabel());
+                }
+                case 3 -> {
+                    DeadChessView r3 = new DeadChessView("resource/animals/left/grey/3.png");
+                    boardView.redDeadPanel.add(r3.getLabel());
+                }
+                case 4 -> {
+                    DeadChessView r4 = new DeadChessView("resource/animals/left/grey/4.png");
+                    boardView.redDeadPanel.add(r4.getLabel());
+                }
+                case 5 -> {
+                    DeadChessView r5 = new DeadChessView("resource/animals/left/grey/5.png");
+                    boardView.redDeadPanel.add(r5.getLabel());
+                }
+                case 6 -> {
+                    DeadChessView r6 = new DeadChessView("resource/animals/left/grey/6.png");
+                    boardView.redDeadPanel.add(r6.getLabel());
+                }
+                case 7 -> {
+                    DeadChessView r7 = new DeadChessView("resource/animals/left/grey/7.png");
+                    boardView.redDeadPanel.add(r7.getLabel());
+                }
+                case 8 -> {
+                    DeadChessView r8 = new DeadChessView("resource/animals/left/grey/8.png");
+                    boardView.redDeadPanel.add(r8.getLabel());
+                }
+            }
+        }
+    }
 }
 
 
